{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport * as C from \"./style\";\nimport Grid from \"../Grid\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  let {\n    handleAdd,\n    transactionsList,\n    setTransactionsList\n  } = _ref;\n  const [desc, setDesc] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [isExpense, setExpense] = useState(false);\n  const generateID = () => Math.round(Math.random() * 1000);\n  const handleSave = () => {\n    if (!desc || !amount) {\n      alert(\"Informe a descrição e o valor!\");\n      return;\n    } else if (amount < 1) {\n      alert(\"O valor tem que ser positivo\");\n      return;\n    }\n    const transaction = {\n      id: generateID,\n      desc: desc,\n      amount: amount,\n      expense: isExpense\n    };\n    handleSave(transaction);\n    setDesc(\"\");\n    setAmount(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Form, \"7XANGAFU4fIQXqJrkr9hEp6NfzQ=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","C","Grid","Fragment","_Fragment","jsxDEV","_jsxDEV","Form","_ref","_s","handleAdd","transactionsList","setTransactionsList","desc","setDesc","amount","setAmount","isExpense","setExpense","generateID","Math","round","random","handleSave","alert","transaction","id","expense","_c","$RefreshReg$"],"sources":["C:/Users/walla/controle_financas/src/components/Form/index.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport * as C from \"./style\";\r\nimport Grid from \"../Grid\";\r\n\r\nconst Form = ({handleAdd, transactionsList, setTransactionsList}) => {\r\n\r\n    const [desc, setDesc] = useState(\"\");\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [isExpense, setExpense] = useState(false);\r\n\r\n    const generateID = () => Math.round(Math.random()*1000);\r\n\r\n    const handleSave = () => {\r\n        if (!desc || !amount){\r\n            alert(\"Informe a descrição e o valor!\");\r\n            return;\r\n        } else if(amount < 1){\r\n            alert(\"O valor tem que ser positivo\");\r\n            return;\r\n        }\r\n\r\n        const transaction ={\r\n            id: generateID,\r\n            desc: desc,\r\n            amount: amount,\r\n            expense: isExpense,\r\n        };\r\n\r\n        handleSave(transaction);\r\n\r\n        setDesc(\"\");\r\n        setAmount(\"\");\r\n    };\r\n\r\n    return (\r\n        \r\n        <>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Form;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,KAAKC,CAAC,MAAM,SAAS;AAC5B,OAAOC,IAAI,MAAM,SAAS;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,IAAI,GAAGC,IAAA,IAAwD;EAAAC,EAAA;EAAA,IAAvD;IAACC,SAAS;IAAEC,gBAAgB;IAAEC;EAAmB,CAAC,GAAAJ,IAAA;EAE5D,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiB,SAAS,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMmB,UAAU,GAAGA,CAAA,KAAMC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAC,IAAI,CAAC;EAEvD,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAI,CAACV,IAAI,IAAI,CAACE,MAAM,EAAC;MACjBS,KAAK,CAAC,gCAAgC,CAAC;MACvC;IACJ,CAAC,MAAM,IAAGT,MAAM,GAAG,CAAC,EAAC;MACjBS,KAAK,CAAC,8BAA8B,CAAC;MACrC;IACJ;IAEA,MAAMC,WAAW,GAAE;MACfC,EAAE,EAAEP,UAAU;MACdN,IAAI,EAAEA,IAAI;MACVE,MAAM,EAAEA,MAAM;MACdY,OAAO,EAAEV;IACb,CAAC;IAEDM,UAAU,CAACE,WAAW,CAAC;IAEvBX,OAAO,CAAC,EAAE,CAAC;IACXE,SAAS,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,oBAEIV,OAAA,CAAAF,SAAA,oBACG;AAEX,CAAC;AAACK,EAAA,CAnCIF,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AAqCV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}